--查找employees表所有emp_no为奇数
--且last_name不为Mary(注意大小写)的员工信息
--并按照hire_date逆序排列
select * from employees
where emp_no %2 =1
and last_name != 'Mary'
order by hire_date desc;

--统计出当前(titles.to_date='9999-01-01')各个title类型对应的员工当前(salaries.to_date='9999-01-01')薪水对应的平均工资。
--结果给出title以及平均工资avg。
select t.title ,avg(s.salary)
from salaries s
join  titles  t on  s.emp_no = t.emp_no
and s.to_date = '9999-01-01'
and t.to_date = '9999-01-01'
group by title;

--获取当前（to_date='9999-01-01'）薪水第二多的员工的emp_no以及其对应的薪水salary
select emp_no ,salary
from salaries 
where to_date = '9999-01-01'
order by salary desc
limit 1,1;

--查找当前薪水(to_date='9999-01-01')排名第二多的员工编号emp_no、薪水salary、last_name以及first_name
select emp.emp_no,sal.salary,emp.last_name,emp.first_name
from employees emp
join  salaries  sal on sal.emp_no = emp.emp_no
and sal.to_date = '9999-01-01'
and salary =(select max(salary) 
from salaries where salary < (select max(salary) from salaries));

--查找所有员工的last_name和first_name以及对应的dept_name，
--也包括暂时没有分配部门的员工
select emp.last_name,emp.first_name,deps.dept_name
from employees emp 
left join dept_emp dep on emp.emp_no = dep.emp_no
left join departments deps on dep.dept_no = deps.dept_no;

--查找员工编号emp_no为10001其自入职以来的薪水salary涨幅(总共涨了多少)growth(可能有多次涨薪，没有降薪)
select max(salary)- min(salary) growth
from salaries
where emp_no ='10001'
group by emp_no;

--查找所有员工自入职以来的薪水涨幅情况，给出员工编号emp_no以及其对应的薪水涨幅growth，并按照growth进行升序
--（注:可能有employees表和salaries表里存在记录的员工，有对应的员工编号和涨薪记录，但是已经离职了，离职的员工salaries表的最新的to_date!='9999-01-01'，这样的数据不显示在查找结果里面）
select a.emp_no, sum(b.salary - a.salary) growth
from salaries a, salaries b
where a.to_date = b.from_date
and a.emp_no not in (
-- 已经离职的人
   select c.emp_no
    from salaries c
    group by c.emp_no
    having max(c.to_date) != "9999-01-01"
)
group by a.emp_no
order by growth ;

--统计各个部门的工资记录数，给出部门编码dept_no、部门名称dept_name以及部门在salaries表里面有多少条记录sum，按照dept_no升序排序
select dep.dept_no, d.dept_name, count(s.salary)
from dept_emp  dep
left join salaries  s on dep.emp_no=s.emp_no
left join departments  d on dep.dept_no=d.dept_no
group by dep.dept_no
order by dep.dept_no;